server:
  port: 8080

---
spring:
  session:
    jdbc:
      initialize-schema: always
  profiles:
    active: aws
  jpa:
    database-platform: org.hibernate.dialect.MySQL5Dialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERID}
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  kafka:
    bootstrap-servers: aeae609db1ed14033bee10d12a9ff8b2-534726741.ap-northeast-2.elb.amazonaws.com:9092
#  cloud:
#    stream:
#      kafka:
#        binder:
##          brokers: ${KAFKA_ENDPOINT}
#          brokers: moine-kafka-0.moine-kafka-headless.moine.svc.cluster.local
#          defaultBrokerPort: 9092
#        streams:
#          binder:
#            configuration:
#              default:
#                key:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#                value:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#      bindings:
#        event-in:
#          group: Group
#          destination: conatus
#          contentType: application/json
#        event-out:
#          destination: conatus
#          contentType: application/json
#spring.cloud.stream:
#  kafka:
#    binder:
#      brokers: moine-kafka.kafka.svc.cluster.local:9092
#  bindings:
#    input:
#      destination: conatus
#      contentType: application/json
#      group: Group
#    output:
#      destination: conatus
#      contentType: application/json
#      group: Group
  cloud:
    stream:
      kafka:
        binder:
          brokers: aeae609db1ed14033bee10d12a9ff8b2-534726741.ap-northeast-2.elb.amazonaws.com:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: Auth
          destination: moine
          contentType: application/json
        event-out:
          destination: moine
          contentType: application/json
logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

---
#spring:
#  session:
#    jdbc:
#      initialize-schema: always
#  profiles: local
#  jpa:
#    database-platform: org.hibernate.dialect.MySQL5Dialect
#    hibernate:
#      ddl-auto: none
#    properties:
#      hibernate:
#        show_sql: true
#        format_sql: true
#  datasource:
#    url: jdbc:localhost:3306/Group?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
#    username: admin
#    password: admin
#    driver-class-name: com.mysql.cj.jdbc.Driver
#  cloud:
#    stream:
#      kafka:
#        binder:
#          brokers: localhost:9092
#        streams:
#          binder:
#            configuration:
#              default:
#                key:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#                value:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#      bindings:
#        event-in:
#          group: Group
#          destination: conatus
#          contentType: application/json
#        event-out:
#          destination: conatus
#          contentType: application/json
#
#logging:
#  level:
#    org.hibernate.type: trace
#    org.springframework.cloud: debug